// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
  directUrl = env("DIRECT_URL")
}

model Exercise {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  workoutExercises  WorkoutExercise[]
}

model UserExercise {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  userId            String              // supabase user id
  workoutExercises  WorkoutExercise[]
  deleted           Boolean
}

model Workout {
  id        String              @id @default(cuid())
  title     String
  notes     String?
  date      DateTime            @default(now())
  userId    String              // supabase user id
  exercises WorkoutExercise[]
  deleted   Boolean 
}

model WorkoutExercise {
  id              Int            @id @default(autoincrement())
  notes           String?
  weightUnit      String
  exerciseId      Int?
  userExerciseId  Int?
  workoutId       String
  exercise        Exercise?      @relation(fields: [exerciseId], references: [id])
  userExercise    UserExercise?  @relation(fields: [userExerciseId], references: [id])
  workout         Workout        @relation(fields: [workoutId], references: [id])
  sets            Set[]
  deleted         Boolean 
}

model Set {
  id          Int             @id @default(autoincrement())
  weight      Float?
  reps        Int?
  rpe         Float?
  exerciseId  Int
  exercise    WorkoutExercise @relation(fields: [exerciseId], references: [id])
  deleted     Boolean
}